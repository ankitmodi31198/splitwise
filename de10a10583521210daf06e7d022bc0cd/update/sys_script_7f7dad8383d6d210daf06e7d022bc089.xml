<?xml version="1.0" encoding="UTF-8"?><record_update sys_domain="global" table="sys_script">
    <sys_script action="INSERT_OR_UPDATE">
        <abort_action>false</abort_action>
        <access>package_private</access>
        <action_delete>false</action_delete>
        <action_insert>true</action_insert>
        <action_query>false</action_query>
        <action_update>false</action_update>
        <active>true</active>
        <add_message>false</add_message>
        <advanced>true</advanced>
        <change_fields>false</change_fields>
        <client_callable>false</client_callable>
        <collection>sn_splitwise_expenses</collection>
        <condition/>
        <description/>
        <execute_function>false</execute_function>
        <filter_condition/>
        <is_rest>false</is_rest>
        <message/>
        <name>Distribute Expense Equally</name>
        <order>100</order>
        <priority>100</priority>
        <rest_method/>
        <rest_method_text/>
        <rest_service/>
        <rest_service_text/>
        <rest_variables/>
        <role_conditions/>
        <script><![CDATA[(function executeRule(current, previous /*null when async*/) {

	// Add your code here
	var groupMembers = new GlideRecord('sn_splitwise_group_members');
	groupMembers.addQuery('group', current.group);
	groupMembers.query();

	var memberCount = 0;
	var members = [];

	while(groupMembers.next()) {
		members.push(groupMembers.sys_id.toString());
	}
	memberCount = members.length;

	if(memberCount) {
		var equalShare = Math.floor(current.amount / memberCount);
		var remainingAmount = current.amount % memberCount;

		for (var i=0; i< members.length; i++) {
		 	var expenseDistribution = new GlideRecord('sn_splitwise_expense_distribution');
			expenseDistribution.initialize();
			expenseDistribution.expense = current.sys_id;
			expenseDistribution.group_member = members[i];
			expenseDistribution.share_amount = ((i === 0) ? equalShare + remainingAmount : equalShare);
			expenseDistribution.note = 'Auto Distribution';
			expenseDistribution.is_settled = false;
			expenseDistribution.insert();
		}
	} else {
		gs.warn('No group members found for group: ' + current.group + '.');
	}

})(current, previous);]]></script>
        <sys_class_name>sys_script</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2024-12-10 12:45:15</sys_created_on>
        <sys_domain>global</sys_domain>
        <sys_domain_path>/</sys_domain_path>
        <sys_id>7f7dad8383d6d210daf06e7d022bc089</sys_id>
        <sys_mod_count>4</sys_mod_count>
        <sys_name>Distribute Expense Equally</sys_name>
        <sys_overrides/>
        <sys_package display_value="Splitwise" source="sn_splitwise">de10a10583521210daf06e7d022bc0cd</sys_package>
        <sys_policy/>
        <sys_scope display_value="Splitwise">de10a10583521210daf06e7d022bc0cd</sys_scope>
        <sys_update_name>sys_script_7f7dad8383d6d210daf06e7d022bc089</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2025-01-07 07:19:37</sys_updated_on>
        <template/>
        <when>after</when>
    </sys_script>
    <sys_translated_text action="delete_multiple" query="documentkey=7f7dad8383d6d210daf06e7d022bc089"/>
    <sys_es_latest_script action="INSERT_OR_UPDATE">
        <id>7f7dad8383d6d210daf06e7d022bc089</id>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2024-12-10 12:45:15</sys_created_on>
        <sys_id>2cae210783d6d210daf06e7d022bc02b</sys_id>
        <sys_mod_count>0</sys_mod_count>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2024-12-10 12:45:15</sys_updated_on>
        <table>sys_script</table>
        <use_es_latest>true</use_es_latest>
    </sys_es_latest_script>
</record_update>

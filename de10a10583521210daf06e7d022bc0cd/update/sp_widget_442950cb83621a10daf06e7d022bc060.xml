<?xml version="1.0" encoding="UTF-8"?><record_update table="sp_widget">
    <sp_widget action="INSERT_OR_UPDATE">
        <category>custom</category>
        <client_script><![CDATA[function ($scope) {
    var c = this;

    // Initialize data
    $scope.data = {
        groupId: '',  // Set this dynamically or hard-code a group ID for testing
        expenses: [],
        newExpense: {
            description: '',
            amount: ''
        }
    };

    // Fetch all expenses for the group
    $scope.fetchExpenses = function() {
        var ga = new GlideAjax('ExpenseManager');
        ga.addParam('action', 'getExpenses');
        ga.addParam('groupId', $scope.data.groupId);
        ga.getXMLAnswer(function(response) {
            try {
                var result = JSON.parse(response.responseXML.documentElement.getAttribute('answer'));
                if (result.expenses) {
                    $scope.data.expenses = result.expenses;
                    $scope.$apply();
                } else {
                    alert(result.message || 'Failed to fetch expenses');
                }
            } catch (e) {
                console.error('Error fetching expenses:', e);
                alert('An error occurred while fetching expenses');
            }
        });
    };

    // Create a new expense
    $scope.createExpense = function() {
        if (!$scope.data.newExpense.description || !$scope.data.newExpense.amount) {
            alert('Description and amount are required');
            return;
        }

        var ga = new GlideAjax('ExpenseManager');
        ga.addParam('action', 'createExpense');
        ga.addParam('groupId', $scope.data.groupId);
        ga.addParam('description', $scope.data.newExpense.description);
        ga.addParam('amount', $scope.data.newExpense.amount);
        ga.getXMLAnswer(function(response) {
            try {
                var result = JSON.parse(response.responseXML.documentElement.getAttribute('answer'));
                if (result.status === 'success') {
                    alert(result.message);
                    $scope.data.newExpense = { description: '', amount: '' };
                    $scope.fetchExpenses();  // Refresh the expense list
                } else {
                    alert(result.message || 'Failed to create expense');
                }
            } catch (e) {
                console.error('Error creating expense:', e);
                alert('An error occurred while creating the expense');
            }
        });
    };

    // Initial fetch
    $scope.fetchExpenses();
}
]]></client_script>
        <controller_as>c</controller_as>
        <css>.demo-form-widget {
    max-width: 400px;
    margin: 20px auto;
    font-family: Arial, sans-serif;

    h2 {
        text-align: center;
        margin-bottom: 20px;
        color: #007bff;
    }

    .form-group {
        margin-bottom: 15px;

        label {
            display: block;
            margin-bottom: 5px;
            font-weight: bold;
        }

        input,
        textarea {
            width: 100%;
            padding: 10px;
            border: 1px solid #ccc;
            border-radius: 4px;
            font-size: 14px;
        }

        textarea {
            resize: vertical;
        }

        input:focus,
        textarea:focus {
            border-color: #007bff;
            outline: none;
        }
    }

    .btn {
        display: block;
        width: 100%;
        padding: 10px;
        background-color: #007bff;
        color: #fff;
        border: none;
        border-radius: 4px;
        font-size: 16px;
        cursor: pointer;

        &amp;:hover {
            background-color: #0056b3;
        }
    }
}
</css>
        <data_table>sp_instance</data_table>
        <demo_data/>
        <description/>
        <docs/>
        <field_list/>
        <has_preview>true</has_preview>
        <id>group_details</id>
        <internal>false</internal>
        <link><![CDATA[function link(scope, element, attrs, controller) {  }]]></link>
        <name>Splitwise Group Details</name>
        <option_schema/>
        <public>false</public>
        <roles/>
        <script/>
        <servicenow>false</servicenow>
        <sys_class_name>sp_widget</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2024-12-22 16:47:21</sys_created_on>
        <sys_id>442950cb83621a10daf06e7d022bc060</sys_id>
        <sys_mod_count>8</sys_mod_count>
        <sys_name>Splitwise Group Details</sys_name>
        <sys_package display_value="Splitwise" source="sn_splitwise">de10a10583521210daf06e7d022bc0cd</sys_package>
        <sys_policy/>
        <sys_scope display_value="Splitwise">de10a10583521210daf06e7d022bc0cd</sys_scope>
        <sys_update_name>sp_widget_442950cb83621a10daf06e7d022bc060</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2024-12-23 06:31:45</sys_updated_on>
        <template><![CDATA[<div class="widget-content">
    <h2>Group Expenses</h2>

    <!-- Expense List -->
    <div ng-if="data.expenses.length > 0">
        <h4>All Expenses</h4>
        <ul>
            <li ng-repeat="expense in data.expenses">
                <strong>{{ expense.description }}</strong>
                <span>- â‚¹{{ expense.amount }}</span>
                <em>(Created by: {{ expense.created_by }}, {{ expense.created_on }})</em>
            </li>
        </ul>
    </div>
    <div ng-if="data.expenses.length === 0">
        <p>No expenses found for this group.</p>
    </div>

    <!-- Create Expense -->
    <h4>Create Expense</h4>
    <form ng-submit="createExpense()">
        <div>
            <label>Description</label>
            <input type="text" ng-model="data.newExpense.description" placeholder="Enter description" required>
        </div>
        <div>
            <label>Amount</label>
            <input type="number" ng-model="data.newExpense.amount" placeholder="Enter amount" required>
        </div>
        <button type="submit">Add Expense</button>
    </form>
</div>
]]></template>
    </sp_widget>
    <sys_es_latest_script action="INSERT_OR_UPDATE">
        <id>442950cb83621a10daf06e7d022bc060</id>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2024-12-22 16:47:21</sys_created_on>
        <sys_id>c82950cb83621a10daf06e7d022bc063</sys_id>
        <sys_mod_count>0</sys_mod_count>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2024-12-22 16:47:21</sys_updated_on>
        <table>sp_widget</table>
        <use_es_latest>true</use_es_latest>
    </sys_es_latest_script>
</record_update>
